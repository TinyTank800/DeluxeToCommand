on:
  push:
    branches:
      - updates
    paths:
      - "version.json"
  workflow_dispatch:

jobs:
  update-files:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout updates branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: updates 

      - name: Debug Git Branches
        run: |
          git branch -a
          git remote -v
          git fetch --all

      - name: Read version.json
        id: get_version
        run: echo "VERSION=$(jq -r '.version' version.json)" >> $GITHUB_ENV

      - name: Replace version in README.md
        run: sed -i "s|{{VERSION}}|${{ env.VERSION }}|g" README.md

      - name: Replace version in index.html
        run: sed -i "s|{{VERSION}}|${{ env.VERSION }}|g" index.html

      - name: Commit version updates to updates branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md index.html
          git commit -m "Update version text to ${{ env.VERSION }}" || echo "No changes to commit"
          git push origin updates

  merge-to-main:
    needs: update-files
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch all branches
        run: git fetch --all

      - name: Ensure updates branch exists locally
        run: |
          git checkout updates || git checkout -b updates origin/updates
          git branch --set-upstream-to=origin/updates updates

      - name: Merge updates into main
        run: |
          git checkout main
          git merge --no-ff origin/updates -m "Merging updates into main"
          git push origin main

  sync-updates-with-main:
    needs: merge-to-main
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout updates branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: updates

      - name: Set up Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch all branches
        run: git fetch --all

      - name: Ensure main exists locally
        run: |
          git checkout main || git checkout -b main origin/main
          git branch --set-upstream-to=origin/main main

      - name: Merge main into updates
        run: |
          git checkout updates
          git merge --no-ff origin/main -m "Sync updates branch with latest main"
          git push origin updates

